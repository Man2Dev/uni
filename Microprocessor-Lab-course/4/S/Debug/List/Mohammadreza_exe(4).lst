
AVRASM ver. 2.1.30  C:\Documents and Settings\Administrator\Desktop\Mohammadreza_exe(4)\S\Debug\List\Mohammadreza_exe(4).asm Tue Dec 21 11:28:49 2021

C:\Documents and Settings\Administrator\Desktop\Mohammadreza_exe(4)\S\Debug\List\Mohammadreza_exe(4).asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Documents and Settings\Administrator\Desktop\Mohammadreza_exe(4)\S\Debug\List\Mohammadreza_exe(4).asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Documents and Settings\Administrator\Desktop\Mohammadreza_exe(4)\S\Debug\List\Mohammadreza_exe(4).asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Documents and Settings\Administrator\Desktop\Mohammadreza_exe(4)\S\Debug\List\Mohammadreza_exe(4).asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Documents and Settings\Administrator\Desktop\Mohammadreza_exe(4)\S\Debug\List\Mohammadreza_exe(4).asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _t=R4
                 	.DEF _t_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0045 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6574
000034 706d
000035 253a
000036 3230      	.DB  0x74,0x65,0x6D,0x70,0x3A,0x25,0x30,0x32
000037 2075
000038 2500
000039 3230
00003a 3a64      	.DB  0x75,0x20,0x0,0x25,0x30,0x32,0x64,0x3A
00003b 3025
00003c 6432
00003d 253a
00003e 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
00003f 0064      	.DB  0x64,0x0
                 _0x2000003:
000040 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000041 0002      	.DW  0x02
000042 0161      	.DW  __base_y_G100
000043 0080      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000044 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000045 94f8      	CLI
000046 27ee      	CLR  R30
000047 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000048 e0f1      	LDI  R31,1
000049 bffb      	OUT  GICR,R31
00004a bfeb      	OUT  GICR,R30
00004b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000053 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000054 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000058 e8e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000059 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005a 9185      	LPM  R24,Z+
00005b 9195      	LPM  R25,Z+
00005c 9700      	SBIW R24,0
00005d f061      	BREQ __GLOBAL_INI_END
00005e 91a5      	LPM  R26,Z+
00005f 91b5      	LPM  R27,Z+
000060 9005      	LPM  R0,Z+
000061 9015      	LPM  R1,Z+
000062 01bf      	MOVW R22,R30
000063 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000064 9005      	LPM  R0,Z+
000065 920d      	ST   X+,R0
000066 9701      	SBIW R24,1
000067 f7e1      	BRNE __GLOBAL_INI_LOOP
000068 01fb      	MOVW R30,R22
000069 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006a e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006b bfed      	OUT  SPL,R30
00006c e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006e e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006f e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000070 940c 007a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <lcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;#asm
                    .equ __lcd_port=0x18;
                 ; 0000 0008 #endasm
                 ;
                 ;int t;
                 ;char str[];
                 ;int temp(){
                 ; 0000 000C int temp(){
                 
                 	.CSEG
                 _temp:
                 ; .FSTART _temp
                 ; 0000 000D     ADCSRA = 0b11000000;
000072 ece0      	LDI  R30,LOW(192)
000073 b9e6      	OUT  0x6,R30
                 ; 0000 000E     while (ADCSRA.4==0);
                 _0x3:
000074 9b34      	SBIS 0x6,4
000075 cffe      	RJMP _0x3
                 ; 0000 000F     ADCSRA.4=1;
000076 9a34      	SBI  0x6,4
                 ; 0000 0010     return ADCW;
000077 b1e4      	IN   R30,0x4
000078 b1f5      	IN   R31,0x4+1
000079 9508      	RET
                 ; 0000 0011 }
                 ; .FEND
                 ;
                 ;void main(void) {
                 ; 0000 0013 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 0014     int h=23,m=59,s=45;
                 ; 0000 0015     int day=1;
                 ; 0000 0016     char outtime[9];
                 ; 0000 0017     DDRA=0X00;
00007a 972b      	SBIW R28,11
00007b e0e1      	LDI  R30,LOW(1)
00007c 87e9      	STD  Y+9,R30
00007d e0e0      	LDI  R30,LOW(0)
00007e 87ea      	STD  Y+10,R30
                 ;	h -> R16,R17
                 ;	m -> R18,R19
                 ;	s -> R20,R21
                 ;	day -> Y+9
                 ;	outtime -> Y+0
                +
00007f e107     +LDI R16 , LOW ( 23 )
000080 e010     +LDI R17 , HIGH ( 23 )
                 	__GETWRN 16,17,23
                +
000081 e32b     +LDI R18 , LOW ( 59 )
000082 e030     +LDI R19 , HIGH ( 59 )
                 	__GETWRN 18,19,59
                +
000083 e24d     +LDI R20 , LOW ( 45 )
000084 e050     +LDI R21 , HIGH ( 45 )
                 	__GETWRN 20,21,45
000085 bbea      	OUT  0x1A,R30
                 ; 0000 0018     ADMUX=0b11000000;
000086 ece0      	LDI  R30,LOW(192)
000087 b9e7      	OUT  0x7,R30
                 ; 0000 0019     ADCSRA.6=1;
000088 9a36      	SBI  0x6,6
                 ; 0000 001A     lcd_init(16);
000089 e1a0      	LDI  R26,LOW(16)
00008a 940e 018c 	CALL _lcd_init
                 ; 0000 001B 
                 ; 0000 001C     while (1){
                 _0xA:
                 ; 0000 001D         s++;
                +
00008c 5f4f     +SUBI R20 , LOW ( - 1 )
00008d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 001E         if(s==60){
00008e e3ec      	LDI  R30,LOW(60)
00008f e0f0      	LDI  R31,HIGH(60)
000090 17e4      	CP   R30,R20
000091 07f5      	CPC  R31,R21
000092 f421      	BRNE _0xD
                 ; 0000 001F             m++;
                +
000093 5f2f     +SUBI R18 , LOW ( - 1 )
000094 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0020             s=0;}
                +
000095 e040     +LDI R20 , LOW ( 0 )
000096 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 0021 
                 ; 0000 0022         if(m==60){
                 _0xD:
000097 e3ec      	LDI  R30,LOW(60)
000098 e0f0      	LDI  R31,HIGH(60)
000099 17e2      	CP   R30,R18
00009a 07f3      	CPC  R31,R19
00009b f421      	BRNE _0xE
                 ; 0000 0023             h++;
                +
00009c 5f0f     +SUBI R16 , LOW ( - 1 )
00009d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0024             m=0;}
                +
00009e e020     +LDI R18 , LOW ( 0 )
00009f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 0025 
                 ; 0000 0026         if(h==24){
                 _0xE:
0000a0 e1e8      	LDI  R30,LOW(24)
0000a1 e0f0      	LDI  R31,HIGH(24)
0000a2 17e0      	CP   R30,R16
0000a3 07f1      	CPC  R31,R17
0000a4 f439      	BRNE _0xF
                 ; 0000 0027             h=0;
                +
0000a5 e000     +LDI R16 , LOW ( 0 )
0000a6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 0028             day++;}
0000a7 85e9      	LDD  R30,Y+9
0000a8 85fa      	LDD  R31,Y+9+1
0000a9 9631      	ADIW R30,1
0000aa 87e9      	STD  Y+9,R30
0000ab 87fa      	STD  Y+9+1,R31
                 ; 0000 0029 
                 ; 0000 002A         if(day==8){
                 _0xF:
0000ac 85a9      	LDD  R26,Y+9
0000ad 85ba      	LDD  R27,Y+9+1
0000ae 9718      	SBIW R26,8
0000af f421      	BRNE _0x10
                 ; 0000 002B             day=1;}
0000b0 e0e1      	LDI  R30,LOW(1)
0000b1 e0f0      	LDI  R31,HIGH(1)
0000b2 87e9      	STD  Y+9,R30
0000b3 87fa      	STD  Y+9+1,R31
                 ; 0000 002C 
                 ; 0000 002D         t=temp()/4;
                 _0x10:
0000b4 dfbd      	RCALL _temp
0000b5 01df      	MOVW R26,R30
0000b6 e0e4      	LDI  R30,LOW(4)
0000b7 e0f0      	LDI  R31,HIGH(4)
0000b8 940e 03e4 	CALL __DIVW21
0000ba 012f      	MOVW R4,R30
                 ; 0000 002E         sprintf(str,"temp:%02u ",t);
0000bb e6e0      	LDI  R30,LOW(_str)
0000bc e0f1      	LDI  R31,HIGH(_str)
0000bd 93fa      	ST   -Y,R31
0000be 93ea      	ST   -Y,R30
                +
0000bf e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
0000c3 01f2      	MOVW R30,R4
0000c4 940e 0380 	CALL SUBOPT_0x0
0000c6 e084      	LDI  R24,4
0000c7 940e 0333 	CALL _sprintf
0000c9 9628      	ADIW R28,8
                 ; 0000 002F         lcd_puts(str);
0000ca e6a0      	LDI  R26,LOW(_str)
0000cb e0b1      	LDI  R27,HIGH(_str)
0000cc 940e 016a 	CALL _lcd_puts
                 ; 0000 0030 
                 ; 0000 0031         sprintf(outtime,"%02d:%02d:%02d",h,m,s);
0000ce 01fe      	MOVW R30,R28
0000cf 93fa      	ST   -Y,R31
0000d0 93ea      	ST   -Y,R30
                +
0000d1 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0000d2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0000d3 93fa      	ST   -Y,R31
0000d4 93ea      	ST   -Y,R30
0000d5 01f8      	MOVW R30,R16
0000d6 940e 0380 	CALL SUBOPT_0x0
0000d8 01f9      	MOVW R30,R18
0000d9 940e 0380 	CALL SUBOPT_0x0
0000db 01fa      	MOVW R30,R20
0000dc 940e 0380 	CALL SUBOPT_0x0
0000de e08c      	LDI  R24,12
0000df 940e 0333 	CALL _sprintf
0000e1 9660      	ADIW R28,16
                 ; 0000 0032         lcd_puts(outtime);
0000e2 01de      	MOVW R26,R28
0000e3 940e 016a 	CALL _lcd_puts
                 ; 0000 0033         delay_ms(1000);
0000e5 eea8      	LDI  R26,LOW(1000)
0000e6 e0b3      	LDI  R27,HIGH(1000)
0000e7 940e 03ba 	CALL _delay_ms
                 ; 0000 0034         lcd_clear();
0000e9 940e 013d 	CALL _lcd_clear
                 ; 0000 0035     };
0000eb cfa0      	RJMP _0xA
                 ; 0000 0036 }
                 _0x11:
0000ec cfff      	RJMP _0x11
                 ; .FEND
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G100:
                 ; .FSTART __lcd_delay_G100
0000ed e0ff          ldi   r31,15
                 __lcd_delay0:
0000ee 95fa          dec   r31
0000ef f7f1          brne  __lcd_delay0
0000f0 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
0000f1 b3a7          in    r26,__lcd_direction
0000f2 70af          andi  r26,0xf                 ;set as input
0000f3 bba7          out   __lcd_direction,r26
0000f4 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0000f5 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0000f6 dff6      	RCALL __lcd_delay_G100
0000f7 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
0000f8 dff4      	RCALL __lcd_delay_G100
0000f9 b3a6          in    r26,__lcd_pin
0000fa 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0000fb dff1      	RCALL __lcd_delay_G100
0000fc 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
0000fd dfef      	RCALL __lcd_delay_G100
0000fe 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0000ff fda7          sbrc  r26,__lcd_busy_flag
000100 cff5          rjmp  __lcd_busy
000101 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000102 7fa0          andi  r26,0xf0
000103 2bab          or    r26,r27
000104 bba8          out   __lcd_port,r26          ;write
000105 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000106 940e 00ed 	CALL __lcd_delay_G100
000108 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000109 940e 00ed 	CALL __lcd_delay_G100
00010b 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00010c 93aa      	ST   -Y,R26
00010d 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00010e b3a7          in    r26,__lcd_direction
00010f 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000110 bba7          out   __lcd_direction,r26
000111 b3b8          in    r27,__lcd_port
000112 70bf          andi  r27,0xf
000113 81a8          ld    r26,y
000114 dfed      	RCALL __lcd_write_nibble_G100
000115 81a8          ld    r26,y
000116 95a2          swap  r26
000117 dfea      	RCALL __lcd_write_nibble_G100
000118 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000119 940c 01bd 	JMP  _0x2080002
                 ; .FEND
                 __lcd_read_nibble_G100:
                 ; .FSTART __lcd_read_nibble_G100
00011b 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
00011c 940e 00ed 	CALL __lcd_delay_G100
00011e b3e6          in    r30,__lcd_pin           ;read
00011f 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000120 940e 00ed 	CALL __lcd_delay_G100
000122 7fe0          andi  r30,0xf0
000123 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G100:
                 ; .FSTART _lcd_read_byte0_G100
000124 940e 00ed 	CALL __lcd_delay_G100
000126 dff4      	RCALL __lcd_read_nibble_G100
000127 2fae          mov   r26,r30
000128 dff2      	RCALL __lcd_read_nibble_G100
000129 98c1          cbi   __lcd_port,__lcd_rd     ;RD=0
00012a 95e2          swap  r30
00012b 2bea          or    r30,r26
00012c 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00012d 93aa      	ST   -Y,R26
00012e 940e 00f1 	CALL __lcd_ready
000130 81e8      	LD   R30,Y
000131 e0f0      	LDI  R31,0
000132 59ef      	SUBI R30,LOW(-__base_y_G100)
000133 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000134 81e0      	LD   R30,Z
000135 81a9      	LDD  R26,Y+1
000136 0fae      	ADD  R26,R30
000137 940e 010c 	CALL __lcd_write_data
000139 8079      	LDD  R7,Y+1
00013a 8068      	LDD  R6,Y+0
00013b 9622      	ADIW R28,2
00013c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00013d 940e 00f1 	CALL __lcd_ready
00013f e0a2      	LDI  R26,LOW(2)
000140 940e 010c 	CALL __lcd_write_data
000142 940e 00f1 	CALL __lcd_ready
000144 e0ac      	LDI  R26,LOW(12)
000145 940e 010c 	CALL __lcd_write_data
000147 940e 00f1 	CALL __lcd_ready
000149 e0a1      	LDI  R26,LOW(1)
00014a 940e 010c 	CALL __lcd_write_data
00014c e0e0      	LDI  R30,LOW(0)
00014d 2e6e      	MOV  R6,R30
00014e 2e7e      	MOV  R7,R30
00014f 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000150 93aa      	ST   -Y,R26
000151 93ef          push r30
000152 93ff          push r31
000153 81a8          ld   r26,y
000154 9468          set
000155 30aa          cpi  r26,10
000156 f019          breq __lcd_putchar1
000157 94e8          clt
000158 1479      	CP   R7,R9
000159 f030      	BRLO _0x2000004
                 	__lcd_putchar1:
00015a 9463      	INC  R6
00015b e0e0      	LDI  R30,LOW(0)
00015c 93ea      	ST   -Y,R30
00015d 2da6      	MOV  R26,R6
00015e dfce      	RCALL _lcd_gotoxy
00015f f036      	brts __lcd_putchar0
                 _0x2000004:
000160 9473      	INC  R7
000161 df8f          rcall __lcd_ready
000162 9ac0          sbi  __lcd_port,__lcd_rs ;RS=1
000163 81a8      	LD   R26,Y
000164 940e 010c 	CALL __lcd_write_data
                 __lcd_putchar0:
000166 91ff          pop  r31
000167 91ef          pop  r30
000168 940c 01bd 	JMP  _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00016a 93ba      	ST   -Y,R27
00016b 93aa      	ST   -Y,R26
00016c 931a      	ST   -Y,R17
                 _0x2000005:
00016d 81a9      	LDD  R26,Y+1
00016e 81ba      	LDD  R27,Y+1+1
00016f 91ed      	LD   R30,X+
000170 83a9      	STD  Y+1,R26
000171 83ba      	STD  Y+1+1,R27
000172 2f1e      	MOV  R17,R30
000173 30e0      	CPI  R30,0
000174 f019      	BREQ _0x2000007
000175 2fa1      	MOV  R26,R17
000176 dfd9      	RCALL _lcd_putchar
000177 cff5      	RJMP _0x2000005
                 _0x2000007:
000178 8118      	LDD  R17,Y+0
000179 9623      	ADIW R28,3
00017a 9508      	RET
                 ; .FEND
                 __long_delay_G100:
                 ; .FSTART __long_delay_G100
00017b 27aa          clr   r26
00017c 27bb          clr   r27
                 __long_delay0:
00017d 9711          sbiw  r26,1         ;2 cycles
00017e f7f1          brne  __long_delay0 ;2 cycles
00017f 9508      	RET
                 ; .FEND
                 __lcd_init_write_G100:
                 ; .FSTART __lcd_init_write_G100
000180 93aa      	ST   -Y,R26
000181 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000182 b3a7          in    r26,__lcd_direction
000183 6fa7          ori   r26,0xf7                ;set as output
000184 bba7          out   __lcd_direction,r26
000185 b3b8          in    r27,__lcd_port
000186 70bf          andi  r27,0xf
000187 81a8          ld    r26,y
000188 940e 0102 	CALL __lcd_write_nibble_G100
00018a 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00018b c031      	RJMP _0x2080002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00018c 93aa      	ST   -Y,R26
00018d 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
00018e 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
00018f 8098      	LDD  R9,Y+0
000190 81e8      	LD   R30,Y
000191 58e0      	SUBI R30,-LOW(128)
                +
000192 93e0 0163+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000194 81e8      	LD   R30,Y
000195 54e0      	SUBI R30,-LOW(192)
                +
000196 93e0 0164+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000198 940e 0385 	CALL SUBOPT_0x1
00019a 940e 0385 	CALL SUBOPT_0x1
00019c 940e 0385 	CALL SUBOPT_0x1
00019e dfdc      	RCALL __long_delay_G100
00019f e2a0      	LDI  R26,LOW(32)
0001a0 dfdf      	RCALL __lcd_init_write_G100
0001a1 dfd9      	RCALL __long_delay_G100
0001a2 e2a8      	LDI  R26,LOW(40)
0001a3 940e 038a 	CALL SUBOPT_0x2
0001a5 e0a4      	LDI  R26,LOW(4)
0001a6 940e 038a 	CALL SUBOPT_0x2
0001a8 e8a5      	LDI  R26,LOW(133)
0001a9 940e 038a 	CALL SUBOPT_0x2
0001ab b3a7          in    r26,__lcd_direction
0001ac 70af          andi  r26,0xf                 ;set as input
0001ad bba7          out   __lcd_direction,r26
0001ae 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0001af 940e 0124 	CALL _lcd_read_byte0_G100
0001b1 30e5      	CPI  R30,LOW(0x5)
0001b2 f011      	BREQ _0x200000B
0001b3 e0e0      	LDI  R30,LOW(0)
0001b4 c008      	RJMP _0x2080002
                 _0x200000B:
0001b5 940e 00f1 	CALL __lcd_ready
0001b7 e0a6      	LDI  R26,LOW(6)
0001b8 940e 010c 	CALL __lcd_write_data
0001ba 940e 013d 	CALL _lcd_clear
0001bc e0e1      	LDI  R30,LOW(1)
                 _0x2080002:
0001bd 9621      	ADIW R28,1
0001be 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001bf 93ba      	ST   -Y,R27
0001c0 93aa      	ST   -Y,R26
0001c1 931a      	ST   -Y,R17
0001c2 930a      	ST   -Y,R16
0001c3 81aa      	LDD  R26,Y+2
0001c4 81bb      	LDD  R27,Y+2+1
0001c5 9612      	ADIW R26,2
0001c6 940e 03f7 	CALL __GETW1P
0001c8 9730      	SBIW R30,0
0001c9 f159      	BREQ _0x2020010
0001ca 81aa      	LDD  R26,Y+2
0001cb 81bb      	LDD  R27,Y+2+1
0001cc 9614      	ADIW R26,4
0001cd 940e 03f7 	CALL __GETW1P
0001cf 018f      	MOVW R16,R30
0001d0 9730      	SBIW R30,0
0001d1 f061      	BREQ _0x2020012
                +
0001d2 3002     +CPI R16 , LOW ( 2 )
0001d3 e0e0     +LDI R30 , HIGH ( 2 )
0001d4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001d5 f098      	BRLO _0x2020013
0001d6 01f8      	MOVW R30,R16
0001d7 9731      	SBIW R30,1
0001d8 018f      	MOVW R16,R30
                +
0001d9 81aa     +LDD R26 , Y + 2
0001da 81bb     +LDD R27 , Y + 2 + 1
0001db 9614     +ADIW R26 , 4
0001dc 93ed     +ST X + , R30
0001dd 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001de 81aa      	LDD  R26,Y+2
0001df 81bb      	LDD  R27,Y+2+1
0001e0 9612      	ADIW R26,2
0001e1 91ed      	LD   R30,X+
0001e2 91fd      	LD   R31,X+
0001e3 9631      	ADIW R30,1
0001e4 93fe      	ST   -X,R31
0001e5 93ee      	ST   -X,R30
0001e6 9731      	SBIW R30,1
0001e7 81ac      	LDD  R26,Y+4
0001e8 83a0      	STD  Z+0,R26
                 _0x2020013:
0001e9 81aa      	LDD  R26,Y+2
0001ea 81bb      	LDD  R27,Y+2+1
0001eb 940e 03f7 	CALL __GETW1P
0001ed 23ff      	TST  R31
0001ee f02a      	BRMI _0x2020014
0001ef 91ed      	LD   R30,X+
0001f0 91fd      	LD   R31,X+
0001f1 9631      	ADIW R30,1
0001f2 93fe      	ST   -X,R31
0001f3 93ee      	ST   -X,R30
                 _0x2020014:
0001f4 c006      	RJMP _0x2020015
                 _0x2020010:
0001f5 81aa      	LDD  R26,Y+2
0001f6 81bb      	LDD  R27,Y+2+1
0001f7 efef      	LDI  R30,LOW(65535)
0001f8 efff      	LDI  R31,HIGH(65535)
0001f9 93ed      	ST   X+,R30
0001fa 93fc      	ST   X,R31
                 _0x2020015:
0001fb 8119      	LDD  R17,Y+1
0001fc 8108      	LDD  R16,Y+0
0001fd 9625      	ADIW R28,5
0001fe 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001ff 93ba      	ST   -Y,R27
000200 93aa      	ST   -Y,R26
000201 9726      	SBIW R28,6
000202 940e 0404 	CALL __SAVELOCR6
000204 e010      	LDI  R17,0
000205 85ac      	LDD  R26,Y+12
000206 85bd      	LDD  R27,Y+12+1
000207 e0e0      	LDI  R30,LOW(0)
000208 e0f0      	LDI  R31,HIGH(0)
000209 93ed      	ST   X+,R30
00020a 93fc      	ST   X,R31
                 _0x2020016:
00020b 89ea      	LDD  R30,Y+18
00020c 89fb      	LDD  R31,Y+18+1
00020d 9631      	ADIW R30,1
00020e 8bea      	STD  Y+18,R30
00020f 8bfb      	STD  Y+18+1,R31
000210 9731      	SBIW R30,1
000211 91e4      	LPM  R30,Z
000212 2f2e      	MOV  R18,R30
000213 30e0      	CPI  R30,0
000214 f409      	BRNE PC+2
000215 c115      	RJMP _0x2020018
000216 2fe1      	MOV  R30,R17
000217 30e0      	CPI  R30,0
000218 f439      	BRNE _0x202001C
000219 3225      	CPI  R18,37
00021a f411      	BRNE _0x202001D
00021b e011      	LDI  R17,LOW(1)
00021c c002      	RJMP _0x202001E
                 _0x202001D:
00021d 940e 038e 	CALL SUBOPT_0x3
                 _0x202001E:
00021f c10a      	RJMP _0x202001B
                 _0x202001C:
000220 30e1      	CPI  R30,LOW(0x1)
000221 f4a9      	BRNE _0x202001F
000222 3225      	CPI  R18,37
000223 f419      	BRNE _0x2020020
000224 940e 038e 	CALL SUBOPT_0x3
000226 c102      	RJMP _0x20200CC
                 _0x2020020:
000227 e012      	LDI  R17,LOW(2)
000228 e040      	LDI  R20,LOW(0)
000229 e000      	LDI  R16,LOW(0)
00022a 322d      	CPI  R18,45
00022b f411      	BRNE _0x2020021
00022c e001      	LDI  R16,LOW(1)
00022d c0fc      	RJMP _0x202001B
                 _0x2020021:
00022e 322b      	CPI  R18,43
00022f f411      	BRNE _0x2020022
000230 e24b      	LDI  R20,LOW(43)
000231 c0f8      	RJMP _0x202001B
                 _0x2020022:
000232 3220      	CPI  R18,32
000233 f411      	BRNE _0x2020023
000234 e240      	LDI  R20,LOW(32)
000235 c0f4      	RJMP _0x202001B
                 _0x2020023:
000236 c002      	RJMP _0x2020024
                 _0x202001F:
000237 30e2      	CPI  R30,LOW(0x2)
000238 f439      	BRNE _0x2020025
                 _0x2020024:
000239 e050      	LDI  R21,LOW(0)
00023a e013      	LDI  R17,LOW(3)
00023b 3320      	CPI  R18,48
00023c f411      	BRNE _0x2020026
00023d 6800      	ORI  R16,LOW(128)
00023e c0eb      	RJMP _0x202001B
                 _0x2020026:
00023f c003      	RJMP _0x2020027
                 _0x2020025:
000240 30e3      	CPI  R30,LOW(0x3)
000241 f009      	BREQ PC+2
000242 c0e7      	RJMP _0x202001B
                 _0x2020027:
000243 3320      	CPI  R18,48
000244 f010      	BRLO _0x202002A
000245 332a      	CPI  R18,58
000246 f008      	BRLO _0x202002B
                 _0x202002A:
000247 c007      	RJMP _0x2020029
                 _0x202002B:
000248 e0aa      	LDI  R26,LOW(10)
000249 9f5a      	MUL  R21,R26
00024a 2d50      	MOV  R21,R0
00024b 2fe2      	MOV  R30,R18
00024c 53e0      	SUBI R30,LOW(48)
00024d 0f5e      	ADD  R21,R30
00024e c0db      	RJMP _0x202001B
                 _0x2020029:
00024f 2fe2      	MOV  R30,R18
000250 36e3      	CPI  R30,LOW(0x63)
000251 f449      	BRNE _0x202002F
000252 940e 0395 	CALL SUBOPT_0x4
000254 89e8      	LDD  R30,Y+16
000255 89f9      	LDD  R31,Y+16+1
000256 81a4      	LDD  R26,Z+4
000257 93aa      	ST   -Y,R26
000258 940e 039b 	CALL SUBOPT_0x5
00025a c0ce      	RJMP _0x2020030
                 _0x202002F:
00025b 37e3      	CPI  R30,LOW(0x73)
00025c f441      	BRNE _0x2020032
00025d 940e 0395 	CALL SUBOPT_0x4
00025f 940e 03a1 	CALL SUBOPT_0x6
000261 940e 0367 	CALL _strlen
000263 2f1e      	MOV  R17,R30
000264 c00a      	RJMP _0x2020033
                 _0x2020032:
000265 37e0      	CPI  R30,LOW(0x70)
000266 f461      	BRNE _0x2020035
000267 940e 0395 	CALL SUBOPT_0x4
000269 940e 03a1 	CALL SUBOPT_0x6
00026b 940e 0373 	CALL _strlenf
00026d 2f1e      	MOV  R17,R30
00026e 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00026f 6002      	ORI  R16,LOW(2)
000270 770f      	ANDI R16,LOW(127)
000271 e030      	LDI  R19,LOW(0)
000272 c034      	RJMP _0x2020036
                 _0x2020035:
000273 36e4      	CPI  R30,LOW(0x64)
000274 f011      	BREQ _0x2020039
000275 36e9      	CPI  R30,LOW(0x69)
000276 f411      	BRNE _0x202003A
                 _0x2020039:
000277 6004      	ORI  R16,LOW(4)
000278 c002      	RJMP _0x202003B
                 _0x202003A:
000279 37e5      	CPI  R30,LOW(0x75)
00027a f431      	BRNE _0x202003C
                 _0x202003B:
00027b e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00027c e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00027d 83ee      	STD  Y+6,R30
00027e 83ff      	STD  Y+6+1,R31
00027f e015      	LDI  R17,LOW(5)
000280 c00c      	RJMP _0x202003D
                 _0x202003C:
000281 35e8      	CPI  R30,LOW(0x58)
000282 f411      	BRNE _0x202003F
000283 6008      	ORI  R16,LOW(8)
000284 c003      	RJMP _0x2020040
                 _0x202003F:
000285 37e8      	CPI  R30,LOW(0x78)
000286 f009      	BREQ PC+2
000287 c0a1      	RJMP _0x2020071
                 _0x2020040:
000288 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000289 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00028a 83ee      	STD  Y+6,R30
00028b 83ff      	STD  Y+6+1,R31
00028c e014      	LDI  R17,LOW(4)
                 _0x202003D:
00028d ff02      	SBRS R16,2
00028e c014      	RJMP _0x2020042
00028f 940e 0395 	CALL SUBOPT_0x4
000291 940e 03ab 	CALL SUBOPT_0x7
000293 85ab      	LDD  R26,Y+11
000294 23aa      	TST  R26
000295 f43a      	BRPL _0x2020043
000296 85ea      	LDD  R30,Y+10
000297 85fb      	LDD  R31,Y+10+1
000298 940e 03c8 	CALL __ANEGW1
00029a 87ea      	STD  Y+10,R30
00029b 87fb      	STD  Y+10+1,R31
00029c e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00029d 3040      	CPI  R20,0
00029e f011      	BREQ _0x2020044
00029f 5f1f      	SUBI R17,-LOW(1)
0002a0 c001      	RJMP _0x2020045
                 _0x2020044:
0002a1 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0002a2 c004      	RJMP _0x2020046
                 _0x2020042:
0002a3 940e 0395 	CALL SUBOPT_0x4
0002a5 940e 03ab 	CALL SUBOPT_0x7
                 _0x2020046:
                 _0x2020036:
0002a7 fd00      	SBRC R16,0
0002a8 c011      	RJMP _0x2020047
                 _0x2020048:
0002a9 1715      	CP   R17,R21
0002aa f478      	BRSH _0x202004A
0002ab ff07      	SBRS R16,7
0002ac c008      	RJMP _0x202004B
0002ad ff02      	SBRS R16,2
0002ae c004      	RJMP _0x202004C
0002af 7f0b      	ANDI R16,LOW(251)
0002b0 2f24      	MOV  R18,R20
0002b1 5011      	SUBI R17,LOW(1)
0002b2 c001      	RJMP _0x202004D
                 _0x202004C:
0002b3 e320      	LDI  R18,LOW(48)
                 _0x202004D:
0002b4 c001      	RJMP _0x202004E
                 _0x202004B:
0002b5 e220      	LDI  R18,LOW(32)
                 _0x202004E:
0002b6 940e 038e 	CALL SUBOPT_0x3
0002b8 5051      	SUBI R21,LOW(1)
0002b9 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0002ba 2f31      	MOV  R19,R17
0002bb ff01      	SBRS R16,1
0002bc c017      	RJMP _0x202004F
                 _0x2020050:
0002bd 3030      	CPI  R19,0
0002be f0a1      	BREQ _0x2020052
0002bf ff03      	SBRS R16,3
0002c0 c006      	RJMP _0x2020053
0002c1 81ee      	LDD  R30,Y+6
0002c2 81ff      	LDD  R31,Y+6+1
0002c3 9125      	LPM  R18,Z+
0002c4 83ee      	STD  Y+6,R30
0002c5 83ff      	STD  Y+6+1,R31
0002c6 c005      	RJMP _0x2020054
                 _0x2020053:
0002c7 81ae      	LDD  R26,Y+6
0002c8 81bf      	LDD  R27,Y+6+1
0002c9 912d      	LD   R18,X+
0002ca 83ae      	STD  Y+6,R26
0002cb 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002cc 940e 038e 	CALL SUBOPT_0x3
0002ce 3050      	CPI  R21,0
0002cf f009      	BREQ _0x2020055
0002d0 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002d1 5031      	SUBI R19,LOW(1)
0002d2 cfea      	RJMP _0x2020050
                 _0x2020052:
0002d3 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002d4 e320      	LDI  R18,LOW(48)
0002d5 81ee      	LDD  R30,Y+6
0002d6 81ff      	LDD  R31,Y+6+1
0002d7 940e 03fb 	CALL __GETW1PF
0002d9 87e8      	STD  Y+8,R30
0002da 87f9      	STD  Y+8+1,R31
0002db 81ee      	LDD  R30,Y+6
0002dc 81ff      	LDD  R31,Y+6+1
0002dd 9632      	ADIW R30,2
0002de 83ee      	STD  Y+6,R30
0002df 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002e0 85e8      	LDD  R30,Y+8
0002e1 85f9      	LDD  R31,Y+8+1
0002e2 85aa      	LDD  R26,Y+10
0002e3 85bb      	LDD  R27,Y+10+1
0002e4 17ae      	CP   R26,R30
0002e5 07bf      	CPC  R27,R31
0002e6 f050      	BRLO _0x202005C
0002e7 5f2f      	SUBI R18,-LOW(1)
0002e8 85a8      	LDD  R26,Y+8
0002e9 85b9      	LDD  R27,Y+8+1
0002ea 85ea      	LDD  R30,Y+10
0002eb 85fb      	LDD  R31,Y+10+1
0002ec 1bea      	SUB  R30,R26
0002ed 0bfb      	SBC  R31,R27
0002ee 87ea      	STD  Y+10,R30
0002ef 87fb      	STD  Y+10+1,R31
0002f0 cfef      	RJMP _0x202005A
                 _0x202005C:
0002f1 332a      	CPI  R18,58
0002f2 f028      	BRLO _0x202005D
0002f3 ff03      	SBRS R16,3
0002f4 c002      	RJMP _0x202005E
0002f5 5f29      	SUBI R18,-LOW(7)
0002f6 c001      	RJMP _0x202005F
                 _0x202005E:
0002f7 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002f8 fd04      	SBRC R16,4
0002f9 c01a      	RJMP _0x2020061
0002fa 3321      	CPI  R18,49
0002fb f420      	BRSH _0x2020063
0002fc 85a8      	LDD  R26,Y+8
0002fd 85b9      	LDD  R27,Y+8+1
0002fe 9711      	SBIW R26,1
0002ff f409      	BRNE _0x2020062
                 _0x2020063:
000300 c009      	RJMP _0x20200CD
                 _0x2020062:
000301 1753      	CP   R21,R19
000302 f010      	BRLO _0x2020067
000303 ff00      	SBRS R16,0
000304 c001      	RJMP _0x2020068
                 _0x2020067:
000305 c013      	RJMP _0x2020066
                 _0x2020068:
000306 e220      	LDI  R18,LOW(32)
000307 ff07      	SBRS R16,7
000308 c00b      	RJMP _0x2020069
000309 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00030a 6100      	ORI  R16,LOW(16)
00030b ff02      	SBRS R16,2
00030c c007      	RJMP _0x202006A
00030d 7f0b      	ANDI R16,LOW(251)
00030e 934a      	ST   -Y,R20
00030f 940e 039b 	CALL SUBOPT_0x5
000311 3050      	CPI  R21,0
000312 f009      	BREQ _0x202006B
000313 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000314 940e 038e 	CALL SUBOPT_0x3
000316 3050      	CPI  R21,0
000317 f009      	BREQ _0x202006C
000318 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000319 5031      	SUBI R19,LOW(1)
00031a 85a8      	LDD  R26,Y+8
00031b 85b9      	LDD  R27,Y+8+1
00031c 9712      	SBIW R26,2
00031d f008      	BRLO _0x2020059
00031e cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00031f ff00      	SBRS R16,0
000320 c008      	RJMP _0x202006D
                 _0x202006E:
000321 3050      	CPI  R21,0
000322 f031      	BREQ _0x2020070
000323 5051      	SUBI R21,LOW(1)
000324 e2e0      	LDI  R30,LOW(32)
000325 93ea      	ST   -Y,R30
000326 940e 039b 	CALL SUBOPT_0x5
000328 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000329 e010      	LDI  R17,LOW(0)
                 _0x202001B:
00032a cee0      	RJMP _0x2020016
                 _0x2020018:
00032b 85ac      	LDD  R26,Y+12
00032c 85bd      	LDD  R27,Y+12+1
00032d 940e 03f7 	CALL __GETW1P
00032f 940e 040b 	CALL __LOADLOCR6
000331 9664      	ADIW R28,20
000332 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000333 92ff      	PUSH R15
000334 2ef8      	MOV  R15,R24
000335 9726      	SBIW R28,6
000336 940e 0406 	CALL __SAVELOCR4
000338 940e 03b3 	CALL SUBOPT_0x8
00033a 9730      	SBIW R30,0
00033b f419      	BRNE _0x2020072
00033c efef      	LDI  R30,LOW(65535)
00033d efff      	LDI  R31,HIGH(65535)
00033e c023      	RJMP _0x2080001
                 _0x2020072:
00033f 01de      	MOVW R26,R28
000340 9616      	ADIW R26,6
000341 940e 03c4 	CALL __ADDW2R15
000343 018d      	MOVW R16,R26
000344 940e 03b3 	CALL SUBOPT_0x8
000346 83ee      	STD  Y+6,R30
000347 83ff      	STD  Y+6+1,R31
000348 e0e0      	LDI  R30,LOW(0)
000349 87e8      	STD  Y+8,R30
00034a 87e9      	STD  Y+8+1,R30
00034b 01de      	MOVW R26,R28
00034c 961a      	ADIW R26,10
00034d 940e 03c4 	CALL __ADDW2R15
00034f 940e 03f7 	CALL __GETW1P
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
000353 931a      	ST   -Y,R17
000354 930a      	ST   -Y,R16
000355 ebef      	LDI  R30,LOW(_put_buff_G101)
000356 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000357 93fa      	ST   -Y,R31
000358 93ea      	ST   -Y,R30
000359 01de      	MOVW R26,R28
00035a 961a      	ADIW R26,10
00035b dea3      	RCALL __print_G101
00035c 019f      	MOVW R18,R30
00035d 81ae      	LDD  R26,Y+6
00035e 81bf      	LDD  R27,Y+6+1
00035f e0e0      	LDI  R30,LOW(0)
000360 93ec      	ST   X,R30
000361 01f9      	MOVW R30,R18
                 _0x2080001:
000362 940e 040d 	CALL __LOADLOCR4
000364 962a      	ADIW R28,10
000365 90ff      	POP  R15
000366 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000367 93ba      	ST   -Y,R27
000368 93aa      	ST   -Y,R26
000369 91a9          ld   r26,y+
00036a 91b9          ld   r27,y+
00036b 27ee          clr  r30
00036c 27ff          clr  r31
                 strlen0:
00036d 916d          ld   r22,x+
00036e 2366          tst  r22
00036f f011          breq strlen1
000370 9631          adiw r30,1
000371 cffb          rjmp strlen0
                 strlen1:
000372 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000373 93ba      	ST   -Y,R27
000374 93aa      	ST   -Y,R26
000375 27aa          clr  r26
000376 27bb          clr  r27
000377 91e9          ld   r30,y+
000378 91f9          ld   r31,y+
                 strlenf0:
000379 9005      	lpm  r0,z+
00037a 2000          tst  r0
00037b f011          breq strlenf1
00037c 9611          adiw r26,1
00037d cffb          rjmp strlenf0
                 strlenf1:
00037e 01fd          movw r30,r26
00037f 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _str:
000160           	.BYTE 0x1
                 __base_y_G100:
000161           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000380 940e 03cc 	CALL __CWD1
000382 940e 03ff 	CALL __PUTPARD1
000384 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000385 940e 017b 	CALL __long_delay_G100
000387 e3a0      	LDI  R26,LOW(48)
000388 940c 0180 	JMP  __lcd_init_write_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00038a 940e 010c 	CALL __lcd_write_data
00038c 940c 017b 	JMP  __long_delay_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
00038e 932a      	ST   -Y,R18
00038f 85ad      	LDD  R26,Y+13
000390 85be      	LDD  R27,Y+13+1
000391 85ef      	LDD  R30,Y+15
000392 89f8      	LDD  R31,Y+15+1
000393 9509      	ICALL
000394 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000395 89e8      	LDD  R30,Y+16
000396 89f9      	LDD  R31,Y+16+1
000397 9734      	SBIW R30,4
000398 8be8      	STD  Y+16,R30
000399 8bf9      	STD  Y+16+1,R31
00039a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
00039b 85ad      	LDD  R26,Y+13
00039c 85be      	LDD  R27,Y+13+1
00039d 85ef      	LDD  R30,Y+15
00039e 89f8      	LDD  R31,Y+15+1
00039f 9509      	ICALL
0003a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
0003a1 89a8      	LDD  R26,Y+16
0003a2 89b9      	LDD  R27,Y+16+1
0003a3 9614      	ADIW R26,4
0003a4 940e 03f7 	CALL __GETW1P
0003a6 83ee      	STD  Y+6,R30
0003a7 83ff      	STD  Y+6+1,R31
0003a8 81ae      	LDD  R26,Y+6
0003a9 81bf      	LDD  R27,Y+6+1
0003aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
0003ab 89a8      	LDD  R26,Y+16
0003ac 89b9      	LDD  R27,Y+16+1
0003ad 9614      	ADIW R26,4
0003ae 940e 03f7 	CALL __GETW1P
0003b0 87ea      	STD  Y+10,R30
0003b1 87fb      	STD  Y+10+1,R31
0003b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0003b3 01de      	MOVW R26,R28
0003b4 961c      	ADIW R26,12
0003b5 940e 03c4 	CALL __ADDW2R15
0003b7 940e 03f7 	CALL __GETW1P
0003b9 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003ba 9610      	adiw r26,0
0003bb f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003bc ef8a     +LDI R24 , LOW ( 0xFA )
0003bd e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0003be 9701     +SBIW R24 , 1
0003bf f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0003c0 95a8      	wdr
0003c1 9711      	sbiw r26,1
0003c2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003c3 9508      	ret
                 
                 __ADDW2R15:
0003c4 2400      	CLR  R0
0003c5 0daf      	ADD  R26,R15
0003c6 1db0      	ADC  R27,R0
0003c7 9508      	RET
                 
                 __ANEGW1:
0003c8 95f1      	NEG  R31
0003c9 95e1      	NEG  R30
0003ca 40f0      	SBCI R31,0
0003cb 9508      	RET
                 
                 __CWD1:
0003cc 2f6f      	MOV  R22,R31
0003cd 0f66      	ADD  R22,R22
0003ce 0b66      	SBC  R22,R22
0003cf 2f76      	MOV  R23,R22
0003d0 9508      	RET
                 
                 __DIVW21U:
0003d1 2400      	CLR  R0
0003d2 2411      	CLR  R1
0003d3 e190      	LDI  R25,16
                 __DIVW21U1:
0003d4 0faa      	LSL  R26
0003d5 1fbb      	ROL  R27
0003d6 1c00      	ROL  R0
0003d7 1c11      	ROL  R1
0003d8 1a0e      	SUB  R0,R30
0003d9 0a1f      	SBC  R1,R31
0003da f418      	BRCC __DIVW21U2
0003db 0e0e      	ADD  R0,R30
0003dc 1e1f      	ADC  R1,R31
0003dd c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0003de 60a1      	SBR  R26,1
                 __DIVW21U3:
0003df 959a      	DEC  R25
0003e0 f799      	BRNE __DIVW21U1
0003e1 01fd      	MOVW R30,R26
0003e2 01d0      	MOVW R26,R0
0003e3 9508      	RET
                 
                 __DIVW21:
0003e4 d004      	RCALL __CHKSIGNW
0003e5 dfeb      	RCALL __DIVW21U
0003e6 f40e      	BRTC __DIVW211
0003e7 dfe0      	RCALL __ANEGW1
                 __DIVW211:
0003e8 9508      	RET
                 
                 __CHKSIGNW:
0003e9 94e8      	CLT
0003ea fff7      	SBRS R31,7
0003eb c002      	RJMP __CHKSW1
0003ec dfdb      	RCALL __ANEGW1
0003ed 9468      	SET
                 __CHKSW1:
0003ee ffb7      	SBRS R27,7
0003ef c006      	RJMP __CHKSW2
0003f0 95a0      	COM  R26
0003f1 95b0      	COM  R27
0003f2 9611      	ADIW R26,1
0003f3 f800      	BLD  R0,0
0003f4 9403      	INC  R0
0003f5 fa00      	BST  R0,0
                 __CHKSW2:
0003f6 9508      	RET
                 
                 __GETW1P:
0003f7 91ed      	LD   R30,X+
0003f8 91fc      	LD   R31,X
0003f9 9711      	SBIW R26,1
0003fa 9508      	RET
                 
                 __GETW1PF:
0003fb 9005      	LPM  R0,Z+
0003fc 91f4      	LPM  R31,Z
0003fd 2de0      	MOV  R30,R0
0003fe 9508      	RET
                 
                 __PUTPARD1:
0003ff 937a      	ST   -Y,R23
000400 936a      	ST   -Y,R22
000401 93fa      	ST   -Y,R31
000402 93ea      	ST   -Y,R30
000403 9508      	RET
                 
                 __SAVELOCR6:
000404 935a      	ST   -Y,R21
                 __SAVELOCR5:
000405 934a      	ST   -Y,R20
                 __SAVELOCR4:
000406 933a      	ST   -Y,R19
                 __SAVELOCR3:
000407 932a      	ST   -Y,R18
                 __SAVELOCR2:
000408 931a      	ST   -Y,R17
000409 930a      	ST   -Y,R16
00040a 9508      	RET
                 
                 __LOADLOCR6:
00040b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00040c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00040d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00040e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00040f 8119      	LDD  R17,Y+1
000410 8108      	LD   R16,Y
000411 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  19 r1 :   5 r2 :   0 r3 :   0 r4 :   2 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  39 r17:  28 r18:  34 r19:  12 r20:  14 r21:  21 r22:  11 r23:   2 
r24:  12 r25:   5 r26: 124 r27:  46 r28:  18 r29:   1 r30: 176 r31:  80 
x  :  23 y  : 176 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   5 
adiw  :  27 and   :   0 andi  :  10 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  79 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   2 
cp    :   7 cpc   :   5 cpi   :  33 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  10 inc   :   3 jmp   :  26 ld    :  23 ldd   :  81 ldi   : 106 
lds   :   0 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  19 movw  :  24 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   8 out   :  14 pop   :   3 push  :   3 rcall :  20 ret   :  35 
reti  :   0 rjmp  :  62 rol   :   3 ror   :   0 sbc   :   3 sbci  :   5 
sbi   :  11 sbic  :   0 sbis  :   1 sbiw  :  20 sbr   :   1 sbrc  :   3 
sbrs  :  12 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  61 std   :  37 sts   :   2 sub   :   2 subi  :  19 swap  :   2 
tst   :   4 wdr   :   1 
Instructions used: 64 out of 116 (55.2%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000824   2030     54   2084   16384  12.7%
[.dseg] 0x000060 0x000165      0      5      5    1024   0.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
